name: Testing (Linux)
on:
  push:
    branches:
      - main
  pull_request:

env:
  PY_VERSION: 3.8
  GCC_VERSION: 11
  COVERAGE_FLAGS: "--cov=plaquette_simulator --cov-report=term-missing --cov-report=xml:./coverage.xml --no-flaky-report -p no:warnings --tb=native"

jobs:
  cpp_tests:
    name: C++ tests (Linux) 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '${{ env.PY_VERSION }}'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 2 # for codecov

      - name: Install dependencies
        run: |
            sudo apt-get update && sudo apt-get -y -q install cmake gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }} gcovr lcov ninja-build
            python -m pip install --upgrade pip
            python -m pip install pybind11
      - name: Build and run unit tests
        run: |
            cmake . -BBuild -DPLAQUETTE_SIMULATOR_BUILD_TESTS=ON -DPLAQUETTE_SIMULATOR_BUILD_BINDINGS=ON -DCMAKE_CXX_COMPILER="$(which g++-${{ env.GCC_VERSION }})"
            cmake --build ./Build
            ./Build/plaquette_simulator/src/tests/test_runner
  python_tests:
    # Avoid to run the job twice, once on PR merge and once on the fact that this
    # merge-event is also a push to the master branch
    if: github.event.pull_request.merged == false || github.event_name == 'push'
    name: Python tests (Linux)
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: 'requirements*.txt'
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get -y -q install cmake gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }} ninja-build && pip install --upgrade pip

    # setup-python creates an empty venv and wants to know about
    # requirements.txt, but it does not install any packages from it.
    - name: Install Python packages
      run: pip install -r requirements.txt -r requirements_dev.txt  && pip install .
    - name: Install Python packages
      run: pip install git+https://github.com/qc-design/plaquette.git
    - name: Run unit tests
      run: pytest
